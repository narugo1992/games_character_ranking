name: Ranklist Publishing

permissions:
  contents: write

on:
  #  push:
  workflow_dispatch:
  repository_dispatch:
    types:
      - data-refreshed
  schedule:
    - cron: '0 4 * * *'

jobs:
  data_sync:
    name: Data Sync
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        game:
          - 'arknights'
          - 'fgo'
          - 'azurlane'
          - 'girlsfrontline'
          - 'genshin'
        mode:
          - 'r18'
          - 'safe'
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.7'

    steps:
      - name: Get system version for Linux
        if: ${{ contains(matrix.os, 'ubuntu') }}
        shell: bash
        run: |
          echo "OS_NAME=Linux" >> $GITHUB_ENV
          echo "IS_WIN=" >> $GITHUB_ENV
          echo "IS_MAC=" >> $GITHUB_ENV
      - name: Set environment for Cpython
        if: ${{ !contains(matrix.python-version, 'pypy') }}
        shell: bash
        run: |
          echo "IS_PYPY=" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
          submodules: 'recursive'
      - name: Set up system dependences on Linux
        if: ${{ env.OS_NAME == 'Linux' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y tree cloc wget curl make zip
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          make install
          python -m gchar update -g ${{ matrix.game }}
      - name: Test the basic environment
        shell: bash
        run: |
          python -V
          pip --version
          pip list
          tree .
      - name: Creating ranklist of ${{ matrix.game }} [${{ matrix.mode }}]
        uses: nick-fields/retry@v2
        with:
          shell: bash
          timeout_minutes: 20
          max_attempts: 3
          retry_on: error
          command: |
            python -m ranking create -g ${{ matrix.game }} -m ${{ matrix.mode }} -o dist \
              -n $(python -m ranking crec -g ${{ matrix.game }})
            tree dist
      - name: Deploy to Github Page
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${{ matrix.game }}_${{ matrix.mode }} # The branch the action should deploy to.
          FOLDER: dist # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch

  main_branch_sync:
    name: Main Sync
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        mode:
          - 'r18'
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.7'

    steps:
      - name: Get system version for Linux
        if: ${{ contains(matrix.os, 'ubuntu') }}
        shell: bash
        run: |
          echo "OS_NAME=Linux" >> $GITHUB_ENV
          echo "IS_WIN=" >> $GITHUB_ENV
          echo "IS_MAC=" >> $GITHUB_ENV
      - name: Set environment for Cpython
        if: ${{ !contains(matrix.python-version, 'pypy') }}
        shell: bash
        run: |
          echo "IS_PYPY=" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
          submodules: 'recursive'
      - name: Set up system dependences on Linux
        if: ${{ env.OS_NAME == 'Linux' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y tree cloc wget curl make zip
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          make install
          python -m gchar update
      - name: Test the basic environment
        shell: bash
        run: |
          python -V
          pip --version
          pip list
          tree .
      - name: Creating ranklist of ${{ matrix.game }} [${{ matrix.mode }}]
        uses: nick-fields/retry@v2
        with:
          shell: bash
          timeout_minutes: 20
          max_attempts: 3
          retry_on: error
          command: |
            make clean
            python -m ranking relocal -m ${{ matrix.mode }} -n 5
      - name: Change Commit
        id: commit
        run: |
          git config user.name 'narugo1992'
          git config user.email 'narugo@126.com'
          git add -A
          git diff-index --quiet HEAD || git commit -a -m "dev(narugo): auto sync $(date -R)"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
